// Generated by CoffeeScript 1.12.3
var default_color, draw, draw_poly, h, input_points, k, keyPressed, leftmost_point, mouseWheel, num_input_points, setup, w, zonoid;

input_points = [new Point(100, 10), new Point(300, 200), new Point(423, 200), new Point(100, 300), new Point(500, 120), new Point(200, 320), new Point(50, 40), new Point(51, 350), new Point(150, 350), new Point(220, 400), new Point(240, 320), new Point(280, 450)];

default_color = [121, 204, 147, 40];

num_input_points = 15;

h = 480;

w = 640;

k = 1;

zonoid = [];

setup = function() {
  createCanvas(w, h);
  return fill('red');
};

draw = function() {
  var i, j, len, len1, p_i, z_i;
  background(255, 251, 234);
  fill(85, 185, 102, 60);
  stroke(17, 74, 27, 180);
  for (i = 0, len = input_points.length; i < len; i++) {
    p_i = input_points[i];
    ellipse(p_i.x, p_i.y, 10, 10);
  }
  for (j = 0, len1 = zonoid.length; j < len1; j++) {
    z_i = zonoid[j];
    fill(16, 74, 34, 180);
    stroke(16, 74, 34, 255);
    ellipse(z_i.x, z_i.y, 20, 20);
    ellipse(z_i.x, z_i.y, 10, 10);
  }
  if (zonoid.length > 0) {
    return draw_poly(radial_sort(zonoid, {
      anchor: leftmost_point(zonoid),
      cw: true
    }), {
      fill_color: [78, 185, 120, 160],
      stroke_color: [16, 74, 34, 255]
    });
  }
};

keyPressed = function() {
  if (keyCode === LEFT_ARROW) {
    k -= 1;
  } else if (keyCode === RIGHT_ARROW) {
    k += 1;
  }
  if (k < 1) {
    k = 1;
  }
  if (k > input_points.length) {
    k = input_points.length;
  }
  return zonoid = compute_zonoid(input_points, {
    k: k
  });
};

mouseWheel = function(event) {
  if (event.delta > 0) {
    k -= 0.1;
  } else if (event.delta < 0) {
    k += 0.1;
  }
  if (k < 1) {
    k = 1;
  }
  if (k > input_points.length) {
    k = input_points.length;
  }
  return zonoid = compute_zonoid(input_points, {
    k: k
  });
};

draw_poly = function(points, arg) {
  var fill_color, i, len, p_i, ref, stroke_color;
  ref = arg != null ? arg : {}, fill_color = ref.fill_color, stroke_color = ref.stroke_color;
  if (fill_color == null) {
    fill_color = default_color;
  }
  if (stroke_color == null) {
    stroke_color = default_color;
  }
  fill(fill_color[0], fill_color[1], fill_color[2], fill_color[3]);
  stroke(stroke_color[0], stroke_color[1], stroke_color[2], stroke_color[3]);
  beginShape();
  for (i = 0, len = points.length; i < len; i++) {
    p_i = points[i];
    vertex(p_i.x, p_i.y);
  }
  return endShape(CLOSE);
};

leftmost_point = function(S) {
  var i, leftmost_p, len, p, ref;
  leftmost_p = S[0];
  ref = S.slice(1, +(S.length - 1) + 1 || 9e9);
  for (i = 0, len = ref.length; i < len; i++) {
    p = ref[i];
    if (p.x < leftmost_p.x) {
      leftmost_p = p;
    }
  }
  return leftmost_p;
};
