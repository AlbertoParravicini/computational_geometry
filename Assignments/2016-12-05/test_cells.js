// Generated by CoffeeScript 1.11.1
var cells, draw, draw_poly, drawing_points_done, h, input_points, keyPressed, mousePressed, query_point, r1, r2, r3, setup, w,
  modulo = function(a, b) { return (+a % (b = +b) + b) % b; };

query_point = false;

drawing_points_done = false;

w = 1200;

h = 800;

r1 = Math.random();

r2 = Math.random();

r3 = Math.random();

input_points = [];

cells = false;

setup = function() {
  createCanvas(w, h);
  return fill('black');
};

draw = function() {
  var i, j, k, len, p, ref, results;
  background(230);
  fill("black");
  stroke("black");
  for (j = 0, len = input_points.length; j < len; j++) {
    p = input_points[j];
    ellipse(p.x, p.y, 10, 10);
  }
  if (cells) {
    results = [];
    for (i = k = 0, ref = cells.length; 0 <= ref ? k < ref : k > ref; i = 0 <= ref ? ++k : --k) {
      results.push(draw_poly(radial_sort(cells[i], input_points[i])));
    }
    return results;
  }
};

mousePressed = function() {
  if (!drawing_points_done) {
    return input_points.push(new Point(mouseX, mouseY));
  } else {
    return cells = find_cells(input_points);
  }
};

keyPressed = function() {
  drawing_points_done = true;
  return cells = find_cells(input_points);
};

draw_poly = function(points) {
  var coord, j, k, len, len1, p, p_i;
  coord = 0;
  for (j = 0, len = points.length; j < len; j++) {
    p = points[j];
    coord += p.x + p.y;
  }
  fill(modulo(coord * r1, 256), modulo(coord * r2, 256), modulo(coord * r3, 256), 40);
  beginShape();
  for (k = 0, len1 = points.length; k < len1; k++) {
    p_i = points[k];
    vertex(p_i.x, p_i.y);
  }
  return endShape(CLOSE);
};
