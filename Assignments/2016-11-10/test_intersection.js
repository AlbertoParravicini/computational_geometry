// Generated by CoffeeScript 1.11.1
var draw, h, hull, i, input_points, j, keyPressed, mousePressed, new_point, ref, res, setup, w;

input_points = [new Point(180, 118), new Point(300, 200), new Point(423, 200), new Point(100, 300), new Point(350, 120), new Point(200, 320), new Point(200, 340), new Point(450, 350), new Point(150, 390), new Point(220, 400), new Point(240, 320), new Point(280, 450)];

new_point = new Point(320, 240);

for (i = j = 0, ref = input_points.length; 0 <= ref ? j < ref : j > ref; i = 0 <= ref ? ++j : --j) {
  input_points[i].x += 400;
}

hull = convex_hull_graham_scan(input_points);

res = false;

w = 1200;

h = 800;

setup = function() {
  createCanvas(w, h);
  return fill('black');
};

draw = function() {
  var k, l, len, m, p_i, ref1, ref2;
  background(200);
  line(0, h / 2, w, h / 2);
  line(w / 2, 0, w / 2, h);
  fill("green");
  stroke("green");
  ellipse(new_point.x, new_point.y, 8, 8);
  ellipse(hull[0].x, hull[0].y, 8, 8);
  fill("black");
  stroke("black");
  for (k = 0, len = hull.length; k < len; k++) {
    p_i = hull[k];
    ellipse(p_i.x, p_i.y, 4, 4);
  }
  if (hull.length > 2) {
    for (i = l = 0, ref1 = hull.length - 2; 0 <= ref1 ? l <= ref1 : l >= ref1; i = 0 <= ref1 ? ++l : --l) {
      line(hull[i].x, hull[i].y, hull[i + 1].x, hull[i + 1].y);
    }
    for (i = m = 2, ref2 = hull.length - 2; 2 <= ref2 ? m <= ref2 : m >= ref2; i = 2 <= ref2 ? ++m : --m) {
      stroke("red");
      line(hull[0].x, hull[0].y, hull[i].x, hull[i].y);
      stroke("black");
    }
  }
  if (res) {
    stroke("green");
    line(new_point.x, new_point.y, points[0].x, points[0].y);
    stroke("red");
    line(res[1].x, res[1].y, res[2].x, res[2].y);
    return stroke("black");
  }
};

mousePressed = function() {
  new_point = new Point(mouseX, mouseY);
  return res = false;
};

keyPressed = function() {
  res = find_intersecting_edge(hull, new_point);
  if (!res) {
    return console.log("result: ", res, "\n");
  }
};
